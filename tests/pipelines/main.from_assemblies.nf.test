nextflow_pipeline {

    name "Integration Tests from assemblies for MIKROKONDO"
    script "main.nf"

    test("Test starting from assemblies") {
        tag "from_assemblies"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet-test-from-assemblies.csv"
                outdir = "results"

                platform = "illumina"

                mash_sketch = "https://github.com/phac-nml/mikrokondo/raw/dev/tests/data/databases/campy-staph-ecoli.msh"
                dehosting_idx = "https://github.com/phac-nml/mikrokondo/raw/dev/tests/data/databases/campy.mmi"
                qt_min_contig_length = 1

                skip_bakta = true
                skip_mobrecon = true
                skip_checkm = true
                skip_raw_read_metrics = true
                skip_polishing = true

                skip_staramr = false
                skip_subtyping = false

                max_memory = "2.GB"
                max_cpus = 1
            }
        }

        then {
            assert workflow.success
            assert path("$launchDir/results").exists()

            // parse final report json file
            def final_report = path("$launchDir/results/SummaryReport/final_report.json").json
            def ecoli_json = final_report.ecoli_GCA_000947975.ecoli_GCA_000947975
            assert ecoli_json.StarAMR."0".Genotype.equals("aph(3'')-Ib, aph(6)-Id, blaCTX-M-15, blaTEM-1B, dfrA7, gyrA (S83A), qacE, sul1, sul2, tet(A)")
            assert ecoli_json.StarAMR."0"."Predicted Phenotype".equals("streptomycin, kanamycin, ampicillin, ceftriaxone, trimethoprim, ciprofloxacin I/R, nalidixic acid, unknown[qacE_1_X68232], sulfisoxazole, tetracycline")
            assert ecoli_json.StarAMR."0".Plasmid.equals("IncQ1")
            assert ecoli_json.StarAMR."0".Scheme.equals("ecoli")
            assert ecoli_json.StarAMR."0"."Sequence Type".equals("678")
            assert ecoli_json.PointfinderDB.equals("escherichia_coli")
            assert ecoli_json.ECTyperSubtyping."0".Species.equals("Escherichia coli")
            assert ecoli_json.ECTyperSubtyping."0"."O-type".equals("O104")
            assert ecoli_json.ECTyperSubtyping."0"."H-type".equals("H4")
            assert ecoli_json.ECTyperSubtyping."0".Serotype.equals("O104:H4")
            assert ecoli_json.ECTyperSubtyping."0".Database.equals("v1.0 (11-03-2020)")
            assert ecoli_json.ECTyperSubtyping."0".QC.equals("PASS (REPORTABLE)")

            // parse final report tsv file
            def final_report_tmap = [:]
            def final_report_tsv = path("$launchDir/results/SummaryReport/final_report.tsv").readLines()
            final_report_tsv.each {
                def tokens = it.split("\t")
                final_report_tmap[tokens[0]] = tokens[1]
            }
            assert final_report_tsv[0] == "\tecoli_GCA_000947975"
            assert final_report_tmap."QUAST.0.Total length" == "5333525"
            assert final_report_tmap."QUAST.0.Largest contig" == "300823"
            assert final_report_tmap."QUAST.0.# contigs" == "187"
            assert final_report_tmap."QUAST.0.N50" == "122025"
            assert final_report_tmap."StarAMR.0.Genotype" == "aph(3'')-Ib, aph(6)-Id, blaCTX-M-15, blaTEM-1B, dfrA7, gyrA (S83A), qacE, sul1, sul2, tet(A)"
            assert final_report_tmap."StarAMR.0.Predicted Phenotype" == "streptomycin, kanamycin, ampicillin, ceftriaxone, trimethoprim, ciprofloxacin I/R, nalidixic acid, unknown[qacE_1_X68232], sulfisoxazole, tetracycline"
            assert final_report_tmap."StarAMR.0.Plasmid" == "IncQ1"
            assert final_report_tmap."StarAMR.0.Scheme" == "ecoli"
            assert final_report_tmap."StarAMR.0.Sequence Type" == "678"
            assert final_report_tmap."ECTyperSubtyping.0.Species" == "\"Escherichia coli\""
            assert final_report_tmap."ECTyperSubtyping.0.O-type" == "O104"
            assert final_report_tmap."ECTyperSubtyping.0.H-type" == "H4"
            assert final_report_tmap."ECTyperSubtyping.0.Serotype" == "O104:H4"
            assert final_report_tmap."ECTyperSubtyping.0.Database" == "\"v1.0 (11-03-2020)\""
            assert final_report_tmap."ECTyperSubtyping.0.QC" == "\"PASS (REPORTABLE)\""

            // compare IRIDA Next JSON output
            def iridanext_json = path("$launchDir/results/iridanext.output.json").json
            def iridanext_global = iridanext_json.files.global
            def iridanext_samples = iridanext_json.files.samples
            def iridanext_metadata = iridanext_json.metadata.samples

            // output files
            assert iridanext_global.findAll { it.path == "SummaryReport/final_report.json" }.size() == 1
            assert iridanext_global.findAll { it.path == "SummaryReport/final_report.tsv" }.size() == 1

            // output metadata
            def ecoli_metadata = iridanext_metadata.ecoli_GCA_000947975
            assert ecoli_metadata."QUAST.0.Total length" == "5333525"
            assert ecoli_metadata."QUAST.0.Largest contig" == "300823"
            assert ecoli_metadata."QUAST.0.# contigs" == "187"
            assert ecoli_metadata."QUAST.0.N50" == "122025"
            assert ecoli_metadata."StarAMR.0.Genotype" == "aph(3'')-Ib, aph(6)-Id, blaCTX-M-15, blaTEM-1B, dfrA7, gyrA (S83A), qacE, sul1, sul2, tet(A)"
            assert ecoli_metadata."StarAMR.0.Predicted Phenotype" == "streptomycin, kanamycin, ampicillin, ceftriaxone, trimethoprim, ciprofloxacin I/R, nalidixic acid, unknown[qacE_1_X68232], sulfisoxazole, tetracycline"
            assert ecoli_metadata."StarAMR.0.Plasmid" == "IncQ1"
            assert ecoli_metadata."StarAMR.0.Scheme" == "ecoli"
            assert ecoli_metadata."StarAMR.0.Sequence Type" == "678"
            assert ecoli_metadata."ECTyperSubtyping.0.Species" == "Escherichia coli"
            assert ecoli_metadata."ECTyperSubtyping.0.O-type" == "O104"
            assert ecoli_metadata."ECTyperSubtyping.0.H-type" == "H4"
            assert ecoli_metadata."ECTyperSubtyping.0.Serotype" == "O104:H4"
            assert ecoli_metadata."ECTyperSubtyping.0.Database" == "v1.0 (11-03-2020)"
            assert ecoli_metadata."ECTyperSubtyping.0.QC" == "PASS (REPORTABLE)"
        }
    }
}
