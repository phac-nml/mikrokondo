/*
Tests for functions in the report module.
*/


nextflow_function {
    name "Test report.nf functions"
    script "modules/local/report.nf"
    function "table_values"

    test("Test tab missing column value, header supplied"){
        tag "tab_missing_value"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/mock_missing_value.tab")
                input[1] = true
                input[2] = '\t'
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['header1':'NoData', 'header2':'stuff2', 'header3':'stuff3']]
            assert function.success
        }
    }

    test("Test tab missing 2 column values, header supplied"){

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/mock_missing_value_2.tab")
                input[1] = true
                input[2] = '\t'
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['header1':'NoData', 'header2':'NoData', 'header3':'stuff3']]
            assert function.success
        }
    }


    test("Test tab, header supplied"){

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/no_missing.tab")
                input[1] = true
                input[2] = '\t'
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['header1':'stuff1', 'header2':'stuff2', 'header3':'stuff3']]
            assert function.success
        }
    }

    test("Test csv missing column value, header supplied"){

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/mock_missing_value.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['header1':'NoData', 'header2':'stuff2', 'header3':'stuff3']]
            assert function.success
        }
    }


    test("Test csv, header supplied"){
        tag "no_missing"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/no_missing.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['header1':'stuff1', 'header2':'stuff2', 'header3':'stuff3']]
            assert function.success
        }
    }

    test("Test csv, header missing one value"){
        tag "header_missing_one_value"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/header_missing_val.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.success
            assert function.result == ['0':['__default_index__':'stuff1', 'header2':'stuff2', 'header3':'stuff3']]
        }
    }


    test("Test csv, no header"){
        tag "csv_no_header"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/no_header.csv")
                input[1] = false
                input[2] = ','
                input[3] = ['header1', 'header2', 'header3']
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.success
            assert function.result == ['0':['header1':'stuff1', 'header2':'stuff2', 'header3':'stuff3']]
        }
    }


    test("Test csv, two headers missing values"){
        tag "two_headers_missing_values"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/two_missing_headers.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.failed
        }
    }

    test("Test csv, vector with header"){
        tag "csv_vector_header"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/vector.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['header1':'stuff1'], '1': ['header1':'stuff2'], '2':['header1':'stuff3']]
            assert function.success
        }
    }

    test("Test empty file"){

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/empty.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.failed
        }
    }


    test("Test more values than columns"){

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/mismatch_headers_values.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.failed
        }
    }

    test("Vector no column header"){
        tag "vector_no_column_header"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/vector_no_hdr.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.result == ['0':['__default_index__':'stuff1'], '1': ['__default_index__':'stuff2'], '2':['__default_index__':'stuff3']]
            assert function.success
        }
    }


    test("Missing all column headers"){
        tag "missing_all_column_headers"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/missing_all_headers.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.failed
            assert function.stdout.any { it.contains("ERROR ~ Mismatched number of headers [] and column values [stuff1, stuff2, stuff3] for file") }
        }
    }

    test("Missing all values"){
        tag "missing_all_values"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/all_values_missing.csv")
                input[1] = true
                input[2] = ','
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.success
            assert function.result == ['0':['header1':'NoData', 'header2':'NoData', 'header3':'NoData']]
        }
    }

    test("Missing last two values"){
        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/missing_last_value.tab")
                input[1] = true
                input[2] = '\t'
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.success
            assert function.result == ['0':['header1':'stuff1', 'header2':'stuff2', 'header3':'NoData']]
        }
    }

    test("Missing multiple terminal value separators"){
        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/missing_multiple_value_separators.tab")
                input[1] = true
                input[2] = '\t'
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.success
            assert function.result == ['0':['header1':'stuff1', 'header2':'stuff2', 'header3':'NoData', 'header4': 'NoData']]
        }
    }

    test("Missing internal value separator"){
        tag "missing_internal_separator"

        when {
            function {
                """
                input[0] = file("$baseDir/tests/data/tables/missing_multiple_value_separators.tab")
                input[1] = true
                input[2] = '\t'
                input[3] = null
                """
            }
            params {
                outdir = "results"
            }
        }
        then{
            assert function.success
            assert function.result == ['0':['header1':'stuff1', 'header2':'stuff2', 'header3':'NoData', 'header4': 'NoData']]
        }
    }
}
