{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/phac-nml/mikrokondo/master/nextflow_schema.json",
  "title": "phac-nml/mikrokondo pipeline parameters",
  "description": "mikrokondo schema",
  "type": "object",
  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": [
        "input",
        "outdir"
      ],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "schema": "assets/schema_input.json",
          "description": "Path to comma-separated file containing information about the samples in the experiment.",
          "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
          "fa_icon": "fas fa-file-csv"
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
          "fa_icon": "fas fa-folder-open"
        },
        "email": {
          "type": "string",
          "description": "Email address for completion summary.",
          "fa_icon": "fas fa-envelope",
          "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
        }
      }
    },
    "bakta": {
      "title": "Bakta",
      "type": "object",
      "description": "",
      "default": "",
      "fa_icon": "fas fa-address-card",
      "properties": {
        "ba_min_conting_length": {
          "type": "integer",
          "default": 200,
          "description": "Minimum contig length for processing in Bakta"
        },
        "bakta": {
          "type": "object",
          "properties": {
            "output_dir": {
              "type": "string",
              "default": "bakta",
              "hidden": true
            },
            "embl_ext": {
              "type": "string",
              "default": ".embl",
              "hidden": true
            },
            "faa_ext": {
              "type": "string",
              "default": ".faa",
              "hidden": true
            },
            "ffn_ext": {
              "type": "string",
              "default": ".ffn",
              "hidden": true
            },
            "fna_ext": {
              "type": "string",
              "default": ".fna",
              "hidden": true
            },
            "gbff_ext": {
              "type": "string",
              "default": ".gbff",
              "hidden": true
            },
            "gff_ext": {
              "type": "string",
              "default": ".gff3",
              "hidden": true
            },
            "threads": {
              "type": "integer",
              "default": 12,
              "hidden": true
            },
            "hypotheticals_tsv_ext": {
              "type": "string",
              "default": ".hypotheticals.tsv",
              "hidden": true
            },
            "hypotheticals_faa_ext": {
              "type": "string",
              "default": ".hypotheticals.faa",
              "hidden": true
            },
            "tsv_ext": {
              "type": "string",
              "default": ".tsv",
              "hidden": true
            },
            "txt_ext": {
              "type": "string",
              "default": ".txt",
              "hidden": true
            },
            "min_contig_length": {
              "type": "integer",
              "default": 200,
              "hidden": true
            },
            "db": {
              "type": "string",
              "hidden": true
            },
            "args": {
              "type": "string",
              "hidden": true,
              "description": "Additional arguments to pass to bakta",
              "default": "{ \"\" }"
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "hidden": true,
            "default": "quay.io/biocontainers/bakta:1.8.1--pyhdfd78af_0"
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/bakta%3A1.8.1--pyhdfd78af_0",
            "hidden": true
          }
        }
      }
    },
    "fastp": {
      "title": "FastP",
      "type": "object",
      "description": "",
      "default": "",
      "fa_icon": "fas fa-filter",
      "properties": {
        "fp_average_quality": {
          "type": "integer",
          "default": 25
        },
        "fp_cut_tail_mean_quality": {
          "type": "integer",
          "default": 15
        },
        "fp_cut_tail_window_size": {
          "type": "integer",
          "default": 4
        },
        "fp_complexity_threshold": {
          "type": "integer",
          "default": 20
        },
        "fp_qualified_phred": {
          "type": "integer",
          "default": 15
        },
        "fp_unqualified_precent_limit": {
          "type": "integer",
          "default": 40
        },
        "fp_polyg_min_len": {
          "type": "integer",
          "default": 10
        },
        "fp_polyx_min_len": {
          "type": "integer",
          "default": 10
        },
        "fp_illumina_length_min": {
          "type": "integer",
          "default": 35
        },
        "fp_illumina_length_max": {
          "type": "integer",
          "default": 400
        },
        "fp_single_end_length_min": {
          "type": "integer",
          "default": 1000
        },
        "fp_dedup_reads": {
          "type": "boolean"
        },
        "fastp": {
          "type": "object",
          "properties": {
            "html_ext": {
              "type": "string",
              "default": ".html",
              "hidden": true
            },
            "average_quality_e": {
              "type": "integer",
              "default": 25,
              "description": "Average quality of a read to be included (read pair is discarded if it is below this value)",
              "hidden": true
            },
            "json_ext": {
              "type": "string",
              "default": ".json",
              "hidden": true
            },
            "qualified_quality_phred": {
              "type": "integer",
              "default": 15,
              "description": "Phred score to be considered qualified. See FastP docs for more details.",
              "hidden": true
            },
            "unqualified_percent_limit": {
              "type": "integer",
              "default": 40,
              "description": "Percent of bases in a read to be qualified for the read to be included. See FastP docs for more details.",
              "hidden": true
            },
            "fastq_ext": {
              "type": "string",
              "default": ".trimmed.fastq.gz",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "FastP",
              "hidden": true
            },
            "illumina_length_min": {
              "type": "integer",
              "default": 35,
              "description": "Minimum length of a read to be included in later analysis for illumina data.",
              "hidden": true
            },
            "single_end_length_min": {
              "type": "integer",
              "default": 1000,
              "description": "Minimum leng of a read to be used in later analysis (for Nanopore or Pacbio)",
              "hidden": true
            },
            "dedup_reads": {
              "type": "boolean",
              "description": "Option to turn on read de-duplication.",
              "hidden": true
            },
            "args": {
              "type": "object",
              "properties": {
                "illumina": {
                  "type": "string",
                  "default": "--overrepresentation_analysis --trim_poly_g --poly_g_min_len 10 --trim_poly_x --poly_x_min_len 10 --cut_tail --cut_tail_window_size 4 --cut_tail_mean_quality 15 --low_complexity_filter --complexity_threshold 20 --average_qual 25 --qualified_quality_phred 15 --unqualified_percent_limit 40 --length_limit 400 --length_required 35 --detect_adapter_for_pe",
                  "hidden": true
                },
                "single_end": {
                  "type": "string",
                  "default": "--overrepresentation_analysis -Q --length_required 1000",
                  "hidden": true
                }
              }
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/fastp%3A0.23.2--hb7a2d85_2",
            "hidden": true
          }
        }
      }
    },
    "mash": {
      "title": "Mash",
      "type": "object",
      "description": "",
      "default": "",
      "fa_icon": "fas fa-align-left",
      "properties": {
        "mh_min_kmer": {
          "type": "integer",
          "default": 10,
          "description": "Minimum Kmer count needed for a unique kmer to be used in genome size estimation"
        },
        "mash": {
          "type": "object",
          "properties": {
            "mash_ext": {
              "type": "string",
              "default": ".screen",
              "hidden": true
            },
            "output_reads_ext": {
              "type": "string",
              "default": ".reads.screen",
              "hidden": true
            },
            "output_taxa_ext": {
              "type": "string",
              "default": ".taxa.screen",
              "hidden": true
            },
            "output_dir": {
              "type": "string",
              "default": "contamination",
              "hidden": true
            },
            "mash_sketch": {
              "type": "string",
              "hidden": true
            },
            "sketch_ext": {
              "type": "string",
              "default": ".msh",
              "hidden": true
            },
            "sketch_kmer_size": {
              "type": "integer",
              "default": 21,
              "hidden": true
            },
            "final_sketch_name": {
              "type": "string",
              "default": "GTDB_sketch",
              "hidden": true
            },
            "json_ext": {
              "type": "string",
              "default": ".json",
              "hidden": true
            },
            "min_kmer": {
              "type": "integer",
              "default": 10,
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "Mash",
              "hidden": true
            },
            "header_p": {
              "type": "boolean",
              "hidden": true
            },
            "headers": {
              "type": "string",
              "default": "['identity', 'Shared Hashes', 'Median Multiplicity', 'P-Value', 'Query ID', 'Query Note']",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/mash:2.3--he348c14_1",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/mash:2.3--he348c14_1",
            "hidden": true
          }
        }
      }
    },
    "quast": {
      "title": "QUAST",
      "type": "object",
      "description": "",
      "default": "",
      "fa_icon": "fas fa-check-circle",
      "properties": {
        "qt_min_contig_length": {
          "type": "integer",
          "default": 1000
        },
        "quast": {
          "type": "object",
          "properties": {
            "suffix": {
              "type": "string",
              "default": "quast",
              "hidden": true
            },
            "report_base": {
              "type": "string",
              "default": "report",
              "hidden": true
            },
            "report_prefix": {
              "type": "string",
              "default": "transposed_",
              "hidden": true
            },
            "report_ext": {
              "type": "string",
              "default": ".tsv",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "QUAST",
              "hidden": true
            },
            "min_contig_length": {
              "type": "integer",
              "default": 1000,
              "description": "Minimum contig length to be used my Quast.",
              "hidden": true
            },
            "args": {
              "type": "string",
              "default": "{ \"--min-contig ${params.quast.min_contig_length} --report-all-metrics\" }",
              "hidden": true
            },
            "contigs_field": {
              "type": "string",
              "default": "# contigs",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/quast:5.2.0--py39pl5321h4e691d4_3",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/quast%3A5.2.0--py39pl5321h4e691d4_3",
            "hidden": true
          }
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "required": [
        "platform"
      ],
      "properties": {
        "target_depth": {
          "type": "integer",
          "default": 100,
          "description": "Target depth to sub-sample reads to."
        },
        "platform": {
          "type": "string",
          "enum": [
            "illumina",
            "nanopore",
            "pacbio",
            "hybrid"
          ],
          "description": "Sequencing platform used.",
          "default": "illumina"
        },
        "nanopore_chemistry": {
          "type": "string",
          "description": "The guppy base calling model. See the docs for a link of valid options."
        },
        "run_kraken": {
          "type": "boolean",
          "description": "Use Kraken2 instead of Mash for sample speciation (Useful if you have Eukaryotic data or Archae)"
        },
        "help": {
          "type": "boolean",
          "description": "Display help text.",
          "fa_icon": "fas fa-question-circle"
        },
        "hybrid_unicycler": {
          "type": "boolean",
          "description": "Use unicycler for hybrid assembly."
        },
        "long_read_opt": {
          "type": "string",
          "default": "nanopore",
          "enum": [
            "nanopore",
            "pacbio"
          ],
          "description": "Specify which longread platform your data is from (nanopore or pacbio). This option must be specified if performing a hybrid assembly."
        },
        "min_reads": {
          "type": "integer",
          "default": 1000,
          "description": "Minimum number of reads a sample requires to move forward for assembly."
        },
        "output_idx_name": {
          "type": "string",
          "hidden": true
        },
        "metagenomic_run": {
          "type": "boolean",
          "description": "Label all samples as metagenomic (Skip autodetection)"
        },
        "flye_read_type": {
          "type": "string",
          "default": "hq",
          "enum": [
            "hq",
            "corr",
            "raw"
          ],
          "description": "Read type for flye to use. hq corresponds to hifi for Pacbio data."
        },
        "stage_in_mode": {
          "type": "string",
          "default": "symlink",
          "hidden": true
        },
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle"
        },
        "publish_dir_mode": {
          "type": "string",
          "default": "copy",
          "description": "Method used to save pipeline results to output directory.",
          "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
          "fa_icon": "fas fa-copy",
          "enum": [
            "symlink",
            "rellink",
            "link",
            "copy",
            "copyNoFollow",
            "move"
          ],
          "hidden": true
        },
        "email_on_fail": {
          "type": "string",
          "description": "Email address for completion summary, only when pipeline fails.",
          "fa_icon": "fas fa-exclamation-triangle",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully."
        },
        "plaintext_email": {
          "type": "boolean",
          "description": "Send plain-text email instead of HTML.",
          "fa_icon": "fas fa-remove-format"
        },
        "monochrome_logs": {
          "type": "boolean",
          "description": "Do not use coloured log outputs.",
          "fa_icon": "fas fa-palette",
          "hidden": true
        },
        "hook_url": {
          "type": "string",
          "description": "Incoming hook URL for messaging service",
          "fa_icon": "fas fa-people-group",
          "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
          "hidden": true
        },
        "tracedir": {
          "type": "string",
          "description": "Directory to keep pipeline Nextflow logs and reports.",
          "default": "null/pipeline_info",
          "fa_icon": "fas fa-cogs",
          "hidden": true
        },
        "validate_params": {
          "type": "boolean",
          "description": "Boolean whether to validate parameters against the schema at runtime",
          "fa_icon": "fas fa-check-square",
          "default": true,
          "hidden": true
        },
        "show_hidden_params": {
          "type": "boolean",
          "fa_icon": "far fa-eye-slash",
          "description": "Show all params when using `--help`",
          "hidden": true,
          "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
        },
        "slurm_p": {
          "type": "boolean",
          "description": "Use slurm to execute your pipeline"
        },
        "slurm_profile": {
          "type": "string",
          "description": "Slurm partition"
        },
        "validationS3PathCheck": {
          "type": "boolean",
          "default": true,
          "description": "Validate s3 sample sheet."
        }
      }
    },
    "skip_options": {
      "title": "Skip Options",
      "type": "object",
      "description": "Options to alter control flow of the pipeline",
      "default": "",
      "properties": {
        "skip_depth_sampling": {
          "type": "boolean",
          "description": "Skip down sampling of data to a target depth. This is not supported for metagenomic samples or hybrid assemblies."
        },
        "skip_subtyping": {
          "type": "boolean",
          "description": "Do not enter the subtyping workflow, e.g. ECTyper, SISTR etc will not be ran."
        },
        "skip_polishing": {
          "type": "boolean",
          "description": "Skip polishing of assemblies, useful in case of errors or for metagenomic samples that fail."
        },
        "skip_ont_header_cleaning": {
          "type": "boolean",
          "description": "Make nanopore headers unique. Only turn this on if you are worried about duplicate id's e.g. from errors in running sequencing.",
          "default": true
        },
        "skip_checkm": {
          "type": "boolean",
          "description": "Skip running CheckM"
        },
        "skip_report": {
          "type": "boolean",
          "description": "Skip summary report generation"
        },
        "skip_raw_read_metrics": {
          "type": "boolean",
          "description": "Skip generating raw-read metrics. e.g. when data first enters the pipeline"
        },
        "skip_version_gathering": {
          "type": "boolean",
          "description": "Skip creating a report of the final versions of tools used in mikrokondo."
        },
        "skip_metagenomic_detection": {
          "type": "boolean",
          "description": "For samples to be analyzed as isolates."
        },
        "skip_abricate": {
          "type": "boolean",
          "description": "Skip running abricate for annotation"
        },
        "skip_bakta": {
          "type": "boolean",
          "description": "Skip annotation with Bakta"
        },
        "skip_species_classification": {
          "type": "boolean",
          "description": "Skip determining what your species is (with Kraken2 or Mash)"
        },
        "skip_mlst": {
          "type": "boolean",
          "description": "Skip classic 7gene MLST (Uses Torstein Tseemann's mlst)"
        },
        "skip_mobrecon": {
          "type": "boolean",
          "description": "Skip running mob recon for plasmid identification."
        },
        "skip_staramr": {
          "type": "boolean",
          "description": "Skip running StarAMR"
        }
      }
    },
    "databases_and_pre_computed_files": {
      "title": "Databases and Pre-Computed Files",
      "type": "object",
      "description": "",
      "default": "",
      "required": [
        "dehosting_idx",
        "mash_sketch"
      ],
      "properties": {
        "dehosting_idx": {
          "type": "string",
          "default": "databases/PhiPacHum_m2.idx",
          "description": "Minimpa2 index for dehosting and kitome removal"
        },
        "mash_sketch": {
          "type": "string",
          "default": "databases/GTDBSketch_20231003.msh",
          "description": "Mash sketch used for contamination detection and speciation (Sketch comments must be a taxonomic string similar to what Kraken2 outputs)"
        },
        "bakta_db": {
          "type": "string",
          "default": "databases/db-light",
          "description": "Database use for bakta, this value is optional as bakta can be skipped"
        },
        "kraken2_db": {
          "type": "string",
          "default": "databases/k2_standard_20220607/"
        },
        "staramr_db": {
          "type": "string",
          "description": "It is recommended to use the StarAMR database in the StarAMR container however, an external option can be specified"
        }
      }
    },
    "max_job_request_options": {
      "title": "Max job request options",
      "type": "object",
      "fa_icon": "fab fa-acquisitions-incorporated",
      "description": "Set the top limit for requested resources for any single job.",
      "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
      "properties": {
        "max_cpus": {
          "type": "integer",
          "description": "Maximum number of CPUs that can be requested for any single job.",
          "default": 16,
          "fa_icon": "fas fa-microchip",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
        },
        "max_memory": {
          "type": "string",
          "description": "Maximum amount of memory that can be requested for any single job.",
          "default": "2000.GB",
          "fa_icon": "fas fa-memory",
          "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
        },
        "max_time": {
          "type": "string",
          "description": "Maximum amount of time that can be requested for any single job.",
          "default": "240.h",
          "fa_icon": "far fa-clock",
          "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
        }
      }
    },
    "institutional_config_options": {
      "title": "Institutional config options",
      "type": "object",
      "fa_icon": "fas fa-university",
      "description": "Parameters used to describe centralised config profiles. These should not be edited.",
      "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
      "properties": {
        "custom_config_version": {
          "type": "string",
          "description": "Git commit id for Institutional configs.",
          "default": "master",
          "fa_icon": "fas fa-users-cog",
          "hidden": true
        },
        "custom_config_base": {
          "type": "string",
          "description": "Base directory for Institutional configs.",
          "default": "https://raw.githubusercontent.com/nf-core/configs/master",
          "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
          "fa_icon": "fas fa-users-cog",
          "hidden": true
        },
        "config_profile_name": {
          "type": "string",
          "description": "Institutional config name.",
          "fa_icon": "fas fa-users-cog",
          "hidden": true
        },
        "config_profile_description": {
          "type": "string",
          "description": "Institutional config description.",
          "fa_icon": "fas fa-users-cog",
          "hidden": true
        },
        "config_profile_contact": {
          "type": "string",
          "description": "Institutional config contact information.",
          "fa_icon": "fas fa-users-cog",
          "hidden": true
        },
        "config_profile_url": {
          "type": "string",
          "description": "Institutional config URL link.",
          "fa_icon": "fas fa-users-cog",
          "hidden": true
        }
      }
    },
    "seqkit": {
      "title": "SeqKit",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "seqkit": {
          "type": "object",
          "properties": {
            "singularity": {
              "type": "string",
              "default": "https://depot.galaxyproject.org/singularity/seqkit:2.2.0--h9ee0642_0",
              "hidden": true
            },
            "docker": {
              "type": "string",
              "default": "quay.io/biocontainers/seqkit:2.2.0--h9ee0642_0",
              "hidden": true
            },
            "report_ext": {
              "type": "string",
              "default": ".tsv",
              "hidden": true
            },
            "fasta_ext": {
              "type": "string",
              "default": "_filtered.fasta.gz",
              "hidden": true
            },
            "filter_field": {
              "type": "string",
              "default": "max_len",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "Seqkit_stats",
              "hidden": true
            },
            "header_p": {
              "type": "boolean",
              "default": true,
              "hidden": true
            }
          },
          "hidden": true
        }
      }
    },
    "coveragecalculation": {
      "title": "CoverageCalculation",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "coverage_calc_fields": {
          "type": "object",
          "properties": {
            "fixed_cov": {
              "type": "string",
              "default": "FixedGenomeSizeDepth",
              "hidden": true
            },
            "auto_cov": {
              "type": "string",
              "default": "DetectedGenomeSizeDepth",
              "hidden": true
            },
            "bp_field": {
              "type": "string",
              "default": "['RawReadSummary', 'combined', 'total_bp']",
              "hidden": true
            }
          },
          "hidden": true
        }
      }
    },
    "qcreport": {
      "title": "QCReport",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "QCReport": {
          "type": "object",
          "properties": {
            "escherichia": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Escherichia coli",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 50000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 500,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 4500000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 40,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 5000000,
                  "hidden": true
                }
              }
            },
            "salmonella": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Salmonella",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 90000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 200,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 4400000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 40,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 5000000,
                  "hidden": true
                }
              }
            },
            "shigella": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Shigella",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 18000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 5000000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 500,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 4300000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 5000000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 40,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 5000000,
                  "hidden": true
                }
              }
            },
            "listeria": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Listeria",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 50000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 3200000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 200,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 2700000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 3200000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 3000000,
                  "hidden": true
                }
              }
            },
            "klebsiella": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Klebsiella",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 100000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 500,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 4500000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 6000000,
                  "hidden": true
                }
              }
            },
            "staphylococcus": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Staphylococcus",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 100000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 3500000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 550,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 2000000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 3500000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 3500000,
                  "hidden": true
                }
              }
            },
            "fallthrough": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "No organism specific QC data available.",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "string",
                  "hidden": true
                }
              }
            },
            "campylobacter_jejuni": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Campylobacter jejuni",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 100000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 2000000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 150,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 1800000,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 1400000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 2000000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                }
              }
            },
            "campylobacter_coli": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Campylobacter coli",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 100000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 2000000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 150,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 1800000,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 1400000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 2000000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                }
              }
            },
            "vibrio_cholerae": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string",
                  "default": "Vibrio cholerae",
                  "hidden": true
                },
                "raw_average_quality": {
                  "type": "integer",
                  "default": 30,
                  "hidden": true
                },
                "min_n50": {
                  "type": "integer",
                  "default": 100000,
                  "hidden": true
                },
                "max_n50": {
                  "type": "integer",
                  "default": 4300000,
                  "hidden": true
                },
                "min_nr_contigs": {
                  "type": "integer",
                  "default": 1,
                  "hidden": true
                },
                "max_nr_contigs": {
                  "type": "integer",
                  "default": 150,
                  "hidden": true
                },
                "fixed_genome_size": {
                  "type": "integer",
                  "default": 4000000,
                  "hidden": true
                },
                "min_length": {
                  "type": "integer",
                  "default": 3800000,
                  "hidden": true
                },
                "max_length": {
                  "type": "integer",
                  "default": 4300000,
                  "hidden": true
                },
                "max_checkm_contamination": {
                  "type": "number",
                  "default": 3,
                  "hidden": true
                },
                "min_average_coverage": {
                  "type": "integer",
                  "default": 40,
                  "hidden": true
                }
              }
            }
          },
          "hidden": true
        },
        "QCReportFields": {
          "type": "object",
          "properties": {
            "raw_average_quality": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['RawReadSummary', 'combined', 'qual_mean']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Float",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "['raw_average_quality']",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "ge",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "default": true,
                  "hidden": true
                },
                "low_msg": {
                  "type": "string",
                  "default": "Base quality is poor, resequencing is recommended.",
                  "hidden": true
                }
              }
            },
            "average_coverage": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['FixedGenomeSizeDepth']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Float",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "['min_average_coverage']",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "ge",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "default": true,
                  "hidden": true
                },
                "low_msg": {
                  "type": "string",
                  "default": "Depth of coverage from assembly is lower than than expected. A top-up run is likely needed.",
                  "hidden": true
                }
              }
            },
            "metagenomic": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['MashMeta']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Bool",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "[]",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "bool",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "hidden": true
                }
              }
            },
            "n50_value": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['QUAST', '0', 'N50']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Integer",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "['min_n50', 'max_n50']",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "range",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "default": true,
                  "hidden": true
                },
                "low_msg": {
                  "type": "string",
                  "default": "N50 value is low, this could be due to many reasons involving contamination, poor template quality or insufficient template quantity. Reisolation and reseqeuncing may be needed.",
                  "hidden": true
                },
                "high_msg": {
                  "type": "string",
                  "default": "N50 value is high, this is likely a good thing if you have fewer contigs than expected.",
                  "hidden": true
                }
              }
            },
            "nr_contigs": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['QUAST', '0', '# contigs']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Integer",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "['min_nr_contigs', 'max_nr_contigs']",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "range",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "default": true,
                  "hidden": true
                },
                "low_msg": {
                  "type": "string",
                  "default": "Fewer contigs than expected, if your genome length is of an expected size and you have a high N50 you likely just have a high quality assembly.",
                  "hidden": true
                },
                "high_msg": {
                  "type": "string",
                  "default": "More contigs are present than expected, if your N50 is low and your genome length is shorter than expected you likely need to potentially need to reisolate and resequence/top-up your sample.",
                  "hidden": true
                }
              }
            },
            "length": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['QUAST', '0', 'Total length']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Integer",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "['min_length', 'max_length']",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "range",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "default": true,
                  "hidden": true
                },
                "low_msg": {
                  "type": "string",
                  "default": "Genome length lower than expected, you may need to resequence the sample.",
                  "hidden": true
                },
                "high_msg": {
                  "type": "string",
                  "default": "Genome length is higher than expected, contmination is potentially present.",
                  "hidden": true
                }
              }
            },
            "checkm_contamination": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "['CheckM', '0', 'Contamination']",
                  "hidden": true
                },
                "coerce_type": {
                  "type": "string",
                  "default": "Float",
                  "hidden": true
                },
                "compare_fields": {
                  "type": "string",
                  "default": "['max_checkm_contamination']",
                  "hidden": true
                },
                "comp_type": {
                  "type": "string",
                  "default": "le",
                  "hidden": true
                },
                "on": {
                  "type": "boolean",
                  "default": true,
                  "hidden": true
                },
                "high_msg": {
                  "type": "string",
                  "default": "Potential contamination is present in your sample. You may need to reisolate and resequence your sample.",
                  "hidden": true
                }
              }
            }
          },
          "hidden": true
        }
      }
    },
    "seqtk_size": {
      "title": "seqtk_size",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "seqtk_size": {
          "type": "object",
          "properties": {
            "singularity": {
              "type": "string",
              "default": "https://depot.galaxyproject.org/singularity/seqtk%3A1.4--he4a0461_1",
              "hidden": true
            },
            "docker": {
              "type": "string",
              "default": "quay.io/biocontainers/seqtk:1.4--he4a0461_1",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "SeqtkBaseCount",
              "hidden": true
            }
          },
          "hidden": true
        }
      }
    },
    "medaka": {
      "title": "medaka",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "medaka": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "hidden": true,
              "description": "This is set to the base calling model specified in the nanopore_chemistry param"
            },
            "fasta_ext": {
              "type": "string",
              "default": ".fa.gz",
              "hidden": true
            },
            "outdir": {
              "type": "string",
              "default": "medaka",
              "hidden": true
            },
            "batch_size": {
              "type": "integer",
              "default": 5,
              "description": "Batch size for medaka to use for processing.",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/medaka:1.8.0--py38hdaa7744_0",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/medaka%3A1.8.0--py38hdaa7744_0",
            "hidden": true
          }
        }
      }
    },
    "staramr": {
      "title": "StarAMR",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "staramr": {
          "type": "object",
          "properties": {
            "singularity": {
              "type": "string",
              "default": "https://depot.galaxyproject.org/singularity/staramr%3A0.9.1--pyhdfd78af_0",
              "hidden": true
            },
            "docker": {
              "type": "string",
              "default": "quay.io/biocontainers/staramr:0.9.1--pyhdfd78af_0",
              "hidden": true
            },
            "db": {
              "type": "string",
              "description": "Path to a StarAMR database, a database is included in the container."
            },
            "tsv_ext": {
              "type": "string",
              "default": ".tsv",
              "hidden": true
            },
            "txt_ext": {
              "type": "string",
              "default": ".txt",
              "hidden": true
            },
            "xlsx_ext": {
              "type": "string",
              "default": ".xlsx",
              "hidden": true
            },
            "args": {
              "type": "string",
              "hidden": true,
              "default": "{ \"\" }"
            },
            "point_finder_dbs": {
              "type": "string",
              "default": "['salmonella', 'campylobacter', 'enterococcus_faecalis', 'enterococcus_faecium', 'escherichia_coli', 'helicobacter_pylori']",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "StarAMR",
              "hidden": true
            },
            "header_p": {
              "type": "boolean",
              "default": true,
              "hidden": true
            }
          },
          "hidden": true
        }
      }
    },
    "mobrecon": {
      "title": "mobrecon",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "mobsuite_recon": {
          "type": "object",
          "properties": {
            "args": {
              "type": "string",
              "hidden": true,
              "default": "{ \"\" }"
            },
            "fasta_ext": {
              "type": "string",
              "default": ".fasta",
              "hidden": true
            },
            "results_ext": {
              "type": "string",
              "default": ".txt",
              "hidden": true
            },
            "mob_results_file": {
              "type": "string",
              "default": "mobtyper_results.txt",
              "hidden": true
            },
            "contig_report": {
              "type": "string",
              "default": "contig_report.txt",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "MobRecon",
              "hidden": true
            },
            "header_p": {
              "type": "boolean",
              "default": true,
              "hidden": true
            }
          },
          "hidden": true
        }
      }
    },
    "kat": {
      "title": "Kat",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "kat": {
          "type": "object",
          "properties": {
            "hist_ext": {
              "type": "string",
              "default": ".hist",
              "hidden": true
            },
            "json_ext": {
              "type": "string",
              "default": ".hist.dist_analysis.json",
              "hidden": true
            },
            "png_ext": {
              "type": "string",
              "default": ".png",
              "hidden": true
            },
            "postscript_ext": {
              "type": "string",
              "default": ".ps",
              "hidden": true
            },
            "output_type": {
              "type": "string",
              "default": "png",
              "hidden": true
            },
            "pdf_ext": {
              "type": "string",
              "default": ".pdf",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "KatHist",
              "hidden": true
            },
            "jfhash_ext": {
              "type": "string",
              "default": ".jf",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/kat:2.4.2--py38hfc5f9d8_2",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/kat:2.4.2--py38hfc5f9d8_2",
            "hidden": true
          }
        }
      }
    },
    "platform_options": {
      "title": "Platform Options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "opt_platforms": {
          "type": "object",
          "properties": {
            "ont": {
              "type": "string",
              "default": "nanopore",
              "hidden": true
            },
            "pacbio": {
              "type": "string",
              "default": "pacbio",
              "hidden": true
            },
            "hybrid": {
              "type": "string",
              "default": "hybrid",
              "hidden": true
            },
            "illumina": {
              "type": "string",
              "default": "illumina",
              "hidden": true
            }
          },
          "hidden": true
        }
      }
    },
    "seqtk": {
      "title": "Seqtk",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "seqtk": {
          "type": "object",
          "properties": {
            "seed": {
              "type": "integer",
              "default": 42,
              "hidden": true
            },
            "reads_ext": {
              "type": "string",
              "default": "_sampled.fastq.gz",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/seqtk:1.4--he4a0461_1",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/seqtk%3A1.4--he4a0461_1",
            "hidden": true
          }
        }
      }
    },
    "flye": {
      "title": "flye",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "flye": {
          "type": "object",
          "properties": {
            "nanopore": {
              "type": "object",
              "properties": {
                "corr": {
                  "type": "string",
                  "default": "--nano-corr",
                  "hidden": true
                },
                "hq": {
                  "type": "string",
                  "default": "--nano-hq",
                  "hidden": true
                },
                "raw": {
                  "type": "string",
                  "default": "--nano-raw",
                  "hidden": true
                }
              }
            },
            "pacbio": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "string",
                  "default": "--pacbio-raw",
                  "hidden": true
                },
                "corr": {
                  "type": "string",
                  "default": "--pacbio-corr",
                  "hidden": true
                },
                "hq": {
                  "type": "string",
                  "default": "--pacbio-hifi",
                  "hidden": true
                }
              }
            },
            "gfa_ext": {
              "type": "string",
              "default": ".gfa.gz",
              "hidden": true
            },
            "gv_ext": {
              "type": "string",
              "default": ".gv.gz",
              "hidden": true
            },
            "txt_ext": {
              "type": "string",
              "default": ".txt",
              "hidden": true
            },
            "log_ext": {
              "type": "string",
              "default": ".log",
              "hidden": true
            },
            "json_ext": {
              "type": "string",
              "default": ".json",
              "hidden": true
            },
            "polishing_iterations": {
              "type": "integer",
              "default": 1,
              "hidden": true
            },
            "fasta_ext": {
              "type": "string",
              "default": ".fasta.gz",
              "hidden": true
            },
            "args": {
              "type": "string",
              "default": "{ \"--iterations ${params.flye.polishing_iterations}\" }",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/flye:2.9.2--py39h6935b12_0",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/flye:2.9--py39h6935b12_1",
            "hidden": true
          }
        }
      }
    },
    "spades": {
      "title": "spades",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "spades": {
          "type": "object",
          "properties": {
            "scaffolds_ext": {
              "type": "string",
              "default": ".scaffolds.fasta.gz",
              "hidden": true
            },
            "contigs_ext": {
              "type": "string",
              "default": ".contigs.fasta.gz",
              "hidden": true
            },
            "transcripts_ext": {
              "type": "string",
              "default": ".transcripts.fasta.gz",
              "hidden": true
            },
            "gene_clusters_ext": {
              "type": "string",
              "default": ".gene_clusters.fasta.gz",
              "hidden": true
            },
            "assembly_graphs_ext": {
              "type": "string",
              "default": ".assembly.gfa.gz",
              "hidden": true
            },
            "log_ext": {
              "type": "string",
              "default": ".log",
              "hidden": true
            },
            "outdir": {
              "type": "string",
              "default": "assembly",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/spades:3.15.5--h95f258a_1",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/spades:3.15.5--h95f258a_1",
            "hidden": true
          }
        }
      }
    },
    "checkm": {
      "title": "checkm",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "checkm": {
          "type": "object",
          "properties": {
            "alignment_ext": {
              "type": "string",
              "default": "-genes.aln",
              "hidden": true
            },
            "results_ext": {
              "type": "string",
              "default": "-results.txt",
              "hidden": true
            },
            "tsv_ext": {
              "type": "string",
              "default": ".tsv",
              "hidden": true
            },
            "folder_name": {
              "type": "string",
              "default": "checkm",
              "hidden": true
            },
            "gzip_ext": {
              "type": "string",
              "default": ".gz",
              "hidden": true
            },
            "lineage_ms": {
              "type": "string",
              "default": "lineage.ms",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "CheckM",
              "hidden": true
            }
          },
          "hidden": true,
          "docker": {
            "type": "string",
            "default": "quay.io/biocontainers/checkm-genome:1.2.2--pyhdfd78af_1",
            "hidden": true
          },
          "singularity": {
            "type": "string",
            "default": "https://depot.galaxyproject.org/singularity/checkm-genome%3A1.2.2--pyhdfd78af_1",
            "hidden": true
          }
        }
      }
    },
    "kraken2": {
      "title": "kraken2",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "kraken": {
          "type": "object",
          "properties": {
            "db": {
              "type": "string",
              "description": "Path to Kraken2 database (do not use symlinks)"
            },
            "classified_suffix": {
              "type": "string",
              "default": "classified",
              "hidden": true
            },
            "unclassified_suffix": {
              "type": "string",
              "default": "unclassified",
              "hidden": true
            },
            "report_suffix": {
              "type": "string",
              "default": "report",
              "hidden": true
            },
            "output_suffix": {
              "type": "string",
              "default": "output",
              "hidden": true
            },
            "save_output_fastqs": {
              "type": "boolean",
              "hidden": true
            },
            "save_reads_assignments": {
              "type": "boolean",
              "default": true,
              "hidden": true
            },
            "run_kraken_quick": {
              "type": "boolean",
              "hidden": true
            },
            "report_tag": {
              "type": "string",
              "default": "KrakenReport",
              "hidden": true
            },
            "tophit_level": {
              "type": "string",
              "default": "S",
              "hidden": true
            }
          },
          "hidden": true,
          "header_p": {
            "type": "boolean",
            "hidden": true
          },
          "headers": {
            "type": "string",
            "default": "['PercentID', 'FragmentsRecovered', 'FragmentsAssignmentTaxon', 'RankCode']",
            "hidden": true
          }
        },
        "kraken_bin": {
          "type": "object",
          "properties": {
            "taxonomic_level": {
              "type": "string",
              "default": "G",
              "description": "Taxonomic level to bin contigs at."
            }
          },
          "fasta_ext": {
            "type": "string",
            "default": "_binned.fasta.gz",
            "hidden": true
          }
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_output_options"
    },
    {
      "$ref": "#/definitions/bakta"
    },
    {
      "$ref": "#/definitions/fastp"
    },
    {
      "$ref": "#/definitions/mash"
    },
    {
      "$ref": "#/definitions/quast"
    },
    {
      "$ref": "#/definitions/generic_options"
    },
    {
      "$ref": "#/definitions/skip_options"
    },
    {
      "$ref": "#/definitions/databases_and_pre_computed_files"
    },
    {
      "$ref": "#/definitions/max_job_request_options"
    },
    {
      "$ref": "#/definitions/institutional_config_options"
    },
    {
      "$ref": "#/definitions/seqkit"
    },
    {
      "$ref": "#/definitions/coveragecalculation"
    },
    {
      "$ref": "#/definitions/qcreport"
    },
    {
      "$ref": "#/definitions/seqtk_size"
    },
    {
      "$ref": "#/definitions/medaka"
    },
    {
      "$ref": "#/definitions/staramr"
    },
    {
      "$ref": "#/definitions/mobrecon"
    },
    {
      "$ref": "#/definitions/kat"
    },
    {
      "$ref": "#/definitions/platform_options"
    },
    {
      "$ref": "#/definitions/seqtk"
    },
    {
      "$ref": "#/definitions/flye"
    },
    {
      "$ref": "#/definitions/spades"
    },
    {
      "$ref": "#/definitions/checkm"
    },
    {
      "$ref": "#/definitions/kraken2"
    }
  ],
  "properties": {
    "validationFailUnrecognisedParams": {
      "type": "boolean"
    },
    "chopper": {
      "type": "object",
      "properties": {
        "quality": {
          "type": "integer",
          "default": 0,
          "hidden": true
        },
        "minlength": {
          "type": "integer",
          "default": 100,
          "hidden": true
        },
        "fastq_ext": {
          "type": "string",
          "default": ".fastq.gz",
          "hidden": true
        }
      },
      "hidden": true
    },
    "fastqc": {
      "type": "object",
      "properties": {
        "html_ext": {
          "type": "string",
          "default": ".html",
          "hidden": true
        },
        "zip_ext": {
          "type": "string",
          "default": ".zip",
          "hidden": true
        }
      },
      "hidden": true
    },
    "r_contaminants": {
      "type": "object",
      "properties": {
        "phix_fa": {
          "type": "string",
          "hidden": true
        },
        "homo_sapiens_fa": {
          "type": "string",
          "hidden": true
        },
        "pacbio_mg": {
          "type": "string",
          "hidden": true
        },
        "output_ext": {
          "type": "string",
          "default": ".fastq.gz",
          "hidden": true
        },
        "mega_mm2_idx": {
          "type": "string",
          "hidden": true
        },
        "mm2_illumina": {
          "type": "string",
          "default": "-x sr",
          "hidden": true
        },
        "mm2_pac": {
          "type": "string",
          "default": "-x map-pb",
          "hidden": true
        },
        "mm2_ont": {
          "type": "string",
          "default": "-x map-ont",
          "hidden": true
        },
        "mm2_output_ext": {
          "type": "string",
          "default": ".sam",
          "hidden": true
        },
        "samtools_output_ext": {
          "type": "string",
          "default": ".fastq",
          "hidden": true
        },
        "samtools_singletons_ext": {
          "type": "string",
          "default": ".singleton.fq",
          "hidden": true
        },
        "samtools_output_suffix": {
          "type": "string",
          "default": "deconned",
          "hidden": true
        },
        "output_dir": {
          "type": "string",
          "default": "contamination/deconned_reads",
          "hidden": true
        }
      },
      "hidden": true
    },
    "minimap2": {
      "type": "object",
      "properties": {
        "index_outdir": {
          "type": "string",
          "default": "indices",
          "hidden": true
        },
        "index_ext": {
          "type": "string",
          "default": ".idx",
          "hidden": true
        },
        "mapped_paf_ext": {
          "type": "string",
          "default": ".paf",
          "hidden": true
        },
        "mapped_sam_ext": {
          "type": "string",
          "default": ".sam",
          "hidden": true
        },
        "mapped_outdir": {
          "type": "string",
          "default": "mapped",
          "hidden": true
        }
      },
      "hidden": true
    },
    "samtools": {
      "type": "object",
      "properties": {
        "bam_ext": {
          "type": "string",
          "default": ".bam",
          "hidden": true
        },
        "bai_ext": {
          "type": "string",
          "default": ".bai",
          "hidden": true
        }
      },
      "hidden": true
    },
    "racon": {
      "type": "object",
      "properties": {
        "consensus_suffix": {
          "type": "string",
          "default": "_assembly_consensus.fasta",
          "hidden": true
        },
        "consensus_ext": {
          "type": "string",
          "default": ".fasta.gz",
          "hidden": true
        },
        "outdir": {
          "type": "string",
          "default": "polished",
          "hidden": true
        }
      },
      "hidden": true
    },
    "pilon": {
      "type": "object",
      "properties": {
        "outdir": {
          "type": "string",
          "default": "pilon",
          "hidden": true
        },
        "fasta_ext": {
          "type": "string",
          "default": ".fasta.gz",
          "hidden": true
        },
        "fasta_outdir": {
          "type": "string",
          "default": "fasta",
          "hidden": true
        },
        "vcf_ext": {
          "type": "string",
          "default": ".vcf",
          "hidden": true
        },
        "vcf_outdir": {
          "type": "string",
          "default": "vcf",
          "hidden": true
        },
        "changes_ext": {
          "type": "string",
          "default": ".changes",
          "hidden": true
        },
        "changes_outdir": {
          "type": "string",
          "default": "changes",
          "hidden": true
        },
        "max_memory_multiplier": {
          "type": "integer",
          "default": 3,
          "hidden": true
        }
      },
      "hidden": true
    },
    "pilon_iterative": {
      "type": "object",
      "properties": {
        "outdir": {
          "type": "string",
          "default": "pilon",
          "hidden": true
        },
        "fasta_ext": {
          "type": "string",
          "default": ".fasta.gz",
          "hidden": true
        },
        "fasta_outdir": {
          "type": "string",
          "default": "fasta",
          "hidden": true
        },
        "vcf_ext": {
          "type": "string",
          "default": ".vcf",
          "hidden": true
        },
        "vcf_outdir": {
          "type": "string",
          "default": "vcf",
          "hidden": true
        },
        "bam_ext": {
          "type": "string",
          "default": ".bam",
          "hidden": true
        },
        "bai_ext": {
          "type": "string",
          "default": ".bai",
          "hidden": true
        },
        "changes_ext": {
          "type": "string",
          "default": ".changes",
          "hidden": true
        },
        "changes_outdir": {
          "type": "string",
          "default": "changes",
          "hidden": true
        },
        "max_memory_multiplier": {
          "type": "integer",
          "default": 3,
          "hidden": true
        },
        "max_polishing_illumina": {
          "type": "integer",
          "default": 3,
          "hidden": true
        },
        "max_polishing_pacbio": {
          "type": "integer",
          "default": 4,
          "hidden": true
        },
        "max_polishing_nanopore": {
          "type": "integer",
          "default": 10,
          "hidden": true
        }
      },
      "hidden": true
    },
    "unicycler": {
      "type": "object",
      "properties": {
        "scaffolds_ext": {
          "type": "string",
          "default": ".scaffolds.fa.gz",
          "hidden": true
        },
        "assembly_ext": {
          "type": "string",
          "default": ".assembly.gfa.gz",
          "hidden": true
        },
        "log_ext": {
          "type": "string",
          "default": ".unicycler.log",
          "hidden": true
        },
        "outdir": {
          "type": "string",
          "default": "unicycler",
          "hidden": true
        },
        "mem_modifier": {
          "type": "integer",
          "default": 1000,
          "hidden": true
        },
        "threads_increase_factor": {
          "type": "integer",
          "default": 1,
          "hidden": true
        }
      },
      "hidden": true
    },
    "bandage": {
      "type": "object",
      "properties": {
        "svg_ext": {
          "type": "string",
          "default": ".svg",
          "hidden": true
        },
        "outdir": {
          "type": "string",
          "default": "bandage",
          "hidden": true
        }
      },
      "hidden": true
    },
    "ectyper": {
      "type": "object",
      "properties": {
        "log_ext": {
          "type": "string",
          "default": ".log",
          "hidden": true
        },
        "tsv_ext": {
          "type": "string",
          "default": ".tsv",
          "hidden": true
        },
        "txt_ext": {
          "type": "string",
          "default": ".txt",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "ECTyperSubtyping",
          "hidden": true
        },
        "args": {
          "type": "string",
          "default": "{ \"--verify\" }",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        }
      },
      "hidden": true
    },
    "sistr": {
      "type": "object",
      "properties": {
        "tsv_ext": {
          "type": "string",
          "default": ".tab",
          "hidden": true
        },
        "allele_fasta_ext": {
          "type": "string",
          "default": "-allele.fasta",
          "hidden": true
        },
        "allele_json_ext": {
          "type": "string",
          "default": "-allele.json",
          "hidden": true
        },
        "cgmlst_ext": {
          "type": "string",
          "default": "-cgmlst.csv",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "SISTRSubtyping",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        }
      },
      "hidden": true
    },
    "lissero": {
      "type": "object",
      "properties": {
        "tsv_ext": {
          "type": "string",
          "default": ".tsv",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "LISSEROSubtyping",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        }
      },
      "hidden": true
    },
    "shigeifinder": {
      "type": "object",
      "properties": {
        "tsv_ext": {
          "type": "string",
          "default": ".tsv",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        },
        "container_version": {
          "type": "string",
          "default": "1.3.2",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "ShigeifinderSubtyping",
          "hidden": true
        }
      },
      "hidden": true
    },
    "raw_reads": {
      "type": "object",
      "properties": {
        "high_precision": {
          "type": "boolean",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "RawReadSummary",
          "hidden": true
        }
      },
      "hidden": true
    },
    "mlst": {
      "type": "object",
      "properties": {
        "args": {
          "type": "string",
          "hidden": true
        },
        "tsv_ext": {
          "type": "string",
          "default": ".tsv",
          "hidden": true
        },
        "json_ext": {
          "type": "string",
          "default": ".json",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "SevenGeneMLSTReport",
          "hidden": true
        }
      },
      "hidden": true
    },
    "mash_meta": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "MashMeta",
          "hidden": true
        }
      },
      "hidden": true
    },
    "top_hit_species": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "SpeciesTopHit",
          "hidden": true
        }
      },
      "hidden": true
    },
    "kraken_species": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "Kraken2TopHit",
          "hidden": true
        }
      },
      "hidden": true
    },
    "subtyping_report": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "Subtyping",
          "hidden": true
        }
      },
      "hidden": true
    },
    "kleborate": {
      "type": "object",
      "properties": {
        "txt_ext": {
          "type": "string",
          "default": ".results.txt",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "KleborateSubtyping",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        }
      },
      "hidden": true
    },
    "spatyper": {
      "type": "object",
      "properties": {
        "tsv_ext": {
          "type": "string",
          "default": ".tsv",
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "SpaTyperSubtyping",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        },
        "repeats": {
          "type": "string",
          "hidden": true
        },
        "repeat_order": {
          "type": "string",
          "hidden": true
        }
      },
      "hidden": true
    },
    "pointfinder_db_tag": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "PointfinderDB",
          "hidden": true
        }
      },
      "hidden": true
    },
    "abricate": {
      "type": "object",
      "properties": {
        "args": {
          "type": "string",
          "hidden": true,
          "default": "{ \"\" }"
        },
        "report_tag": {
          "type": "string",
          "default": "Abricate",
          "hidden": true
        },
        "header_p": {
          "type": "boolean",
          "default": true,
          "hidden": true
        }
      },
      "hidden": true
    },
    "assembly_status": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "AssemblyCompleted",
          "hidden": true
        }
      },
      "hidden": true
    },
    "filtered_reads": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "integer",
          "default": 1000,
          "hidden": true
        },
        "report_tag": {
          "type": "string",
          "default": "MeetsReadThreshold",
          "hidden": true
        }
      },
      "hidden": true
    },
    "contigs_too_short": {
      "type": "object",
      "properties": {
        "report_tag": {
          "type": "string",
          "default": "MaxContigToShort"
        }
      }
    },
    "report_aggregate": {
      "type": "object",
      "hidden": true,
      "properties": {
        "sample_flat_suffix": {
          "type": "string",
          "default": "_flat_sample.json",
          "hidden": true
        }
      }
    }
  }
}
